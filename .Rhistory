usethis::use_git()
usethis::create_github_token()
gitcreds::gitcreds_set()
cat('\\nocite{*}\n')
\nocite{*}
#  Load required libraries
library(readxl)
library(xts)
library(zoo)
library(lubridate)
library(quadprog)
library(PerformanceAnalytics)
library(dplyr)
library(tidyr)
library(scales)
# --- User parameters
data_path <- "00_raw_data/PT-DATA-ALBI-JIBAR-JSEIND-Daily-1994-2017.xlsx"  # set path
sheet_name <- "CombinedMonthly"   # if you have monthly sheet; else use code below to convert daily->monthly
date_colname <- "Date"            # name of date column in sheet
cash_ticker_patterns <- c("STEFI","JIBAR","RATESTEFI","CASH")  # patterns to remove from optimisation
train_months <- 60                # training window length in months (e.g. 60 = 5 years)
test_months  <- 12                # test window length (e.g. 12 months)
roll_step    <- 12                # roll forward step in months
riskfree_colname <- "STEFI"       # name of the cash column used as risk-free (if present)
rf_use_constant <- TRUE           # if TRUE use mean rf over training window; else use column values
# grid for target excess returns (used in quadratic programming search)
target_grid <- seq(0.001, 0.05, length.out = 200)   # monthly excess returns grid (adjust as needed)
# clear environment
rm(list=ls())
# required libraries
library(openxlsx)
library(timeSeries)   # timeSeries object handling
library(xts)          # time series manipulation
library(zoo)
library(matrixStats)  # colSds
library(quadprog)     #  optimisation
library(knitr)        # tables
library(dplyr)
# ---------- Preprocessing: Load Excel & clean ----------
# Create a list to store sheets
dfS <- list()
for (i in 1:4){
dfS[[i]] <- read.xlsx("00_raw_data/PT-TAA-JSE-Daily-1994-2017.xlsx", sheet = i, detectDates = TRUE)
}
# Convert the Date column to POSIXct
for (i in 1:4) {
dfS[[i]]$Date <- as.POSIXct(dfS[[i]]$Date, format="%Y-%m-%d")
}
View(dfS)
